steps:
  - script: |
      npm install -g @ionic/cli
      npm install -g cordova
    displayName: "Install Ionic CLI AND CORDOVA"

  - task: Cache@2
    inputs:
      key: "package-lock.json"
      path: "$(npm_config_cache)"
      cacheHitVar: CACHE_RESTORED
    displayName: "Caching Bro"

  - powershell: |
      npm ci --cache $(npm_config_cache)
    condition: ne(variables.CACHE_RESTORED, 'true')
    displayName: NPM Install Dependencies

  - powershell: |
      npm cache ls
      npm cache verify
    displayName: NPM Show cache

  - powershell: |
      ionic integration enable cordova
      ionic cordova platform add android
      ionic cordova build android
    workingDirectory: $(Build.SourcesDirectory)
    displayName: "Build Android Project"
    # npm install @ionic/cordova-builders
  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/platforms/android/app/build/outputs/apk/$(buildConfiguration)"
      contents: "**/app-$(buildConfiguration).apk"
      targetFolder: "$(Build.ArtifactStagingDirectory)"
    displayName: "Copy unsigned APK to staging directory"

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      ArtifactName: "$(projectName)"
      publishLocation: "Container"
    displayName: "Publish artifacts"
